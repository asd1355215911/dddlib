Default event dispatcher to take method name as parameter?
And to handle different method names for different base types

Functionality:
Can change name of aggregate apply method
Can change invocation process by specifying an EventDispatcher (not targeted) upon application instantiation

Default ValueObject should be best-effort deep value equality (overridable)

DefaultEventDispatcher - takes method name as argument
MementoEventDispatcher - takes method name as argument
MicrobusEventDispatcher - takes nested event dispatcher as argument

=========== NOTES ===========

Everything should be defined in the bootstrapper by default.
Subsequent definition mechanisms my be added to provide overrides for the bootstrapper functionality. These mechanisms can be registered elsewhere.




Event-based
Record events for persistence - requires factories
Do not record events for persistence - factories not required


NaturalKey attribute required for reconstitution on AggregateRoot
Optional NaturalKey required for each entity






TESTS
=====



ContainingAssemblyBootstrapper
TypeAnalyzerBootstrapper

DefaultConfigurationProvider


Analyzer


Provider		Config Provider
Configuration	Config DTO
Type			Impl
TypeFactory		Factory


EntityType is just config


Entity REQUIRES EntityType (which defines configured behaviour)
EntityType is CREATED by EntityTypeFactory
EntityType MUST NOT be invalid
EntityTypeFactory REQUIRES EntityConfiguration (for create method)
EntityConfiguration IS a DTO
EntityConfiguration MAY BE invalid
