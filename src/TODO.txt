Requirements:

Must be able to map a GUID to another version of the identifier

Example Table:
Version, SerializedValue, GUID
1, key, {GUID.1}
2, key-key2, {GUID.1}
1, otherKey,{GUID.2}

Load all keys from a specific version into a dictionary with GUID as the value.

Version upgrade will need to occur during the up-conversion process as the new key will likely require more information from the stream - or another stream.

What happens if just the serialization changes? Version change?

API:
GUID Map(object naturalKey)


---------------------------------------


Aggregate Root Persistence
- indexer (in memory)
- conventional (in memory)
- event sourcing (in memory)
- snapshotting (in memory)
- dispatcher

- indexer (sql server)
- conventional (sql server)
- event sourcing (sql server)
- snapshotting (sql server)

- conventional (in memory)
- event sourcing (in memory)
- snapshotting (in memory)
- indexer (in memory)

Make snapshotting and conventional persistence the same [test?]


---------------------------------------


EntityConfigurationWrapperExtension for UseNaturalKey to specify serialization somehow - maybe as some sort of extension?
introduce concept of Applications into Schema
introduce type forwarding into sql identity map
introduce tests for SQL whereby the data is "upgraded" between versions

STORAGE:
Split into separate source file nuget?
Add ability to apply versions in most recent order (to skip bad updates) - is this really sensible?
Add ability to check storage version for potential upgrade on error.
Add semver for non-mandatory upgrades.